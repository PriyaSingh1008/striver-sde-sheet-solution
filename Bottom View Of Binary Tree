
#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){
 vector<int>ans;
        if(root==NULL) return ans;
        map<int,BinaryTreeNode<int>*>mpp;
        queue<pair<BinaryTreeNode<int>*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            auto it=q.front();
            q.pop();
            BinaryTreeNode<int>* node=it.first;
            int line=it.second;
            mpp[line]=node;
            if(node->left!=NULL) q.push({node->left,line-1});
            if(node->right!=NULL)q.push({node->right,line+1});
        }
        for(auto it:mpp){
            ans.push_back(it.second->data);
        }
        return ans;

    // Write your code here.
    
}
code link:https://www.codingninjas.com/studio/problems/bottom-view-of-binary-tree_8230745?challengeSlug=striver-sde-challenge
